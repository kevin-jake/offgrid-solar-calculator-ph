{"version":3,"sources":["shared/util/format.js","shared/components/hooks/http-hook.js","shared/util/validators.js","crudpages/form/AddItem.js","crudpages/form/DeleteItem.js","crudpages/form/EditItem.js","shared/components/UIElements/Backdrop.js","shared/util/errorMessages.js"],"names":["numberWithCommas","x","toString","replace","kiloformat","num","toFixed","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","VALIDATOR_REQUIRE","type","VALIDATOR_NUMBER","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","console","log","AddItemOverlay","onCancel","onUpdate","formInputs","title","state","content","setContent","auth","useContext","AuthContext","label","selectedState","setSelectedState","dataState","setDataState","validState","setValidState","errorMsg","setErrorMsg","validatorState","setValidator","renderContent","setValid","i","hasOwnProperty","listkey","validateGeneral","objkey","errorObj","stateSet","valid","getErrorMessage","saveValidation","list","data","validatingFields","key","Object","keys","dataval","handleInputChange","event","parseFloat","postToBackend","datatoPush","api_suffix","toLowerCase","process","JSON","stringify","Authorization","token","handleSave","preventDefault","saveValid","renderInputs","obj","className","htmlFor","onChange","e","handleItemChanged","options","unit","id","target","aria-modal","role","onClick","fill","viewBox","xmlns","fillRule","d","clipRule","onSubmit","map","ReactDOM","createPortal","document","getElementById","AddItem","props","item","Fragment","show","in","mountOnEnter","unmountOnExit","timeout","classNames","DeleteItemOverlay","idToDelete","deleteToBackend","idToDel","handleDelete","DeleteItem","EditItemOverlay","defaultData","patchToBackend","index","findIndex","EditItem","datatoSet","labelset","initialValue","creator","__v","_id","Backdrop","errorType"],"mappings":"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","file":"static/js/1.8f93bb86.chunk.js","sourcesContent":["const numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nconst kiloformat = (num) => {\n  if (num >= 1000000000) {\n    return (num / 1000000000).toFixed(3).replace(/\\.0$/, \"\") + \" G\";\n  }\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(3).replace(/\\.0$/, \"\") + \" M\";\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(3).replace(/\\.0$/, \"\") + \" k\";\n  }\n  return num;\n};\n\nexport { numberWithCommas, kiloformat };\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n    // eslint-disable-next-line\n  }, []);\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\nconst VALIDATOR_TYPE_NUMBER = \"NUMBER\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_NUMBER = () => ({ type: VALIDATOR_TYPE_NUMBER });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n    if (validator.type === VALIDATOR_TYPE_NUMBER) {\n      console.log(value);\n      if (/^[A-Za-z]+$/.test(value)) {\n        isValid = false;\n      } else {\n        isValid = isValid && /^[1-9]\\d*(\\.\\d+)?$/.test(value);\n      }\n    }\n  }\n  return isValid;\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Backdrop from \"../../shared/components/UIElements/Backdrop\";\nimport Select from \"react-select\";\n// import { LOVContext } from \"../../homepage/context/lov-context\";\nimport { validate } from \"../../shared/util/validators\";\nimport { getErrorMessage } from \"../../shared/util/errorMessages\";\nimport { useHttpClient } from \"../../shared/components/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst AddItemOverlay = ({ onCancel, onUpdate, formInputs, title, state }) => {\n  const [content, setContent] = useState(<></>);\n  // const {\n  //   inverters,\n  //   batterylist,\n  //   pvlist,\n  //   scclist,\n  //   setInvLOV,\n  //   setBatteryLOV,\n  //   setPVLOV,\n  //   setSCCLOV,\n  // } = useContext(LOVContext);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n\n  const [selectedState, setSelectedState] = useState({\n    value: \"\",\n    label: \"\",\n  });\n  const [dataState, setDataState] = useState({});\n  const [validState, setValidState] = useState(state);\n  const [errorMsg, setErrorMsg] = useState({});\n  const [validatorState, setValidator] = useState({});\n\n  useEffect(() => {\n    setContent(renderContent());\n    // eslint-disable-next-line\n  }, [validState, dataState, selectedState]);\n\n  useEffect(() => {\n    const setValid = validatorState;\n    formInputs.forEach((i) => {\n      if (i.hasOwnProperty(\"validator\")) {\n        setValid[i.listkey] = {\n          validator: i.validator,\n          label: i.label,\n        };\n      }\n    });\n    setValidator(setValid);\n    // eslint-disable-next-line\n  }, []);\n\n  const validateGeneral = (validator, label, value, objkey) => {\n    let returnObj = {};\n    const errorObj = errorMsg;\n    const stateSet = validState;\n    if (validator) {\n      console.log(value);\n      let val = value.toString();\n      if (val === \"0\") val = \"\";\n      const valid = validate(val, validator);\n      stateSet[objkey] = valid;\n      validator.forEach((i) => {\n        errorObj[objkey] = {\n          type: i.type,\n          message: valid ? \"\" : getErrorMessage(i.type, label),\n        };\n      });\n    }\n    returnObj = { stateSet: stateSet, errorObj: errorObj };\n    return returnObj;\n  };\n\n  const saveValidation = (list, data) => {\n    let validatingFields = {};\n    list.forEach((i) => {\n      const key = i.listkey;\n      if (validatorState.hasOwnProperty(key)) {\n        if (!(Object.keys(data).length === 0)) {\n          // console.log(data);\n          if (data.hasOwnProperty(key)) {\n            validatingFields[key] = validateGeneral(\n              validatorState[key].validator,\n              data[key].label,\n              data[key].dataval,\n              key\n            );\n          } else {\n            validatingFields[key] = validateGeneral(\n              validatorState[key].validator,\n              validatorState[key].label,\n              \"\",\n              key\n            );\n          }\n        } else {\n          validatingFields[key] = validateGeneral(\n            validatorState[key].validator,\n            validatorState[key].label,\n            \"\",\n            key\n          );\n        }\n      }\n    });\n    return validatingFields;\n  };\n\n  const handleItemChanged = (event, objkey, data, validator, label) => {\n    data[objkey] = {\n      dataval: event.value,\n      label: label,\n    };\n    if (validator) {\n      const valid = validateGeneral(validator, label, event, objkey);\n      setErrorMsg(valid.errorObj);\n      setValidState(valid.stateSet);\n      setSelectedState(event);\n      setDataState(data);\n      setContent(renderContent());\n    } else {\n      setSelectedState(event);\n      setDataState(data);\n    }\n  };\n\n  const handleInputChange = (event, objkey, data, validator, label) => {\n    data[objkey] = { dataval: event, label: label };\n    const valid = validateGeneral(validator, label, event, objkey);\n    data[objkey].dataval = parseFloat(data[objkey].dataval);\n    if (validator) {\n      setErrorMsg(valid.errorObj);\n      setValidState(valid.stateSet);\n      setDataState(data);\n      setContent(renderContent());\n      console.log(dataState);\n    } else {\n      setDataState(data);\n      setContent(renderContent());\n    }\n  };\n\n  const postToBackend = async (data, title) => {\n    let datatoPush = {};\n    let api_suffix;\n    for (const key in data) {\n      datatoPush[key] = data[key].dataval;\n    }\n    title === \"Solar Panel\"\n      ? (api_suffix = \"pv\")\n      : (api_suffix = title.toLowerCase());\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/\" + api_suffix,\n        \"POST\",\n        JSON.stringify(datatoPush),\n        {\n          Authorization: \"Bearer \" + auth.token,\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      onCancel();\n      onUpdate();\n      // history.push('/');\n    } catch (err) {}\n  };\n\n  const handleSave = (event, data, title) => {\n    event.preventDefault();\n    // console.log(title);\n    switch (title) {\n      case \"Battery\": {\n        let validatingFields = saveValidation(formInputs, data);\n        let saveValid = true;\n        for (const key in validatingFields) {\n          saveValid = saveValid && validatingFields[key].stateSet[key];\n        }\n        if (saveValid) {\n          postToBackend(data, title);\n        }\n        break;\n      }\n      case \"Inverter\": {\n        let validatingFields = saveValidation(formInputs, data);\n        let saveValid = true;\n        for (const key in validatingFields) {\n          saveValid = saveValid && validatingFields[key].stateSet[key];\n        }\n        if (saveValid) {\n          postToBackend(data, title);\n        }\n        break;\n      }\n      case \"Solar Panel\": {\n        let validatingFields = saveValidation(formInputs, data);\n        let saveValid = true;\n        for (const key in validatingFields) {\n          saveValid = saveValid && validatingFields[key].stateSet[key];\n        }\n        if (saveValid) {\n          postToBackend(data, title);\n        }\n        break;\n      }\n      case \"SCC\": {\n        let validatingFields = saveValidation(formInputs, data);\n        let saveValid = true;\n        for (const key in validatingFields) {\n          saveValid = saveValid && validatingFields[key].stateSet[key];\n        }\n        if (saveValid) {\n          postToBackend(data, title);\n        }\n        break;\n      }\n      default:\n        return null;\n    }\n    setContent(renderContent());\n  };\n\n  const renderInputs = (obj) => {\n    console.log(errorMsg);\n    if (obj.type === \"select\") {\n      return (\n        <div key={obj.listkey}>\n          <label\n            className=\"text-gray-700 dark:text-gray-200\"\n            htmlFor={obj.listkey}\n          >\n            {obj.label}\n            {obj.validator && \"*\"}\n          </label>\n          <Select\n            className={`block w-full px-4 py-2 mt-2 ${\n              validState.hasOwnProperty(obj.listkey)\n                ? validState[obj.listkey]\n                  ? \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                  : \"text-red-700 bg-red-50 dark:bg-red-800 border-red-200 dark:text-red-300 dark:border-red-600 focus:border-red-400 dark:focus:border-red-300 focus:ring-red-300\"\n                : \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n            }`}\n            value={selectedState}\n            onChange={(e) =>\n              handleItemChanged(\n                e,\n                obj.listkey,\n                dataState,\n                obj.validator,\n                obj.label\n              )\n            }\n            options={obj.options}\n          />\n          <p className=\"text-red-700 text-xs\">\n            {errorMsg.hasOwnProperty(obj.listkey) &&\n              errorMsg[obj.listkey].message}\n          </p>\n        </div>\n      );\n    }\n    if (obj.hasOwnProperty(\"unit\")) {\n      if (obj.unit !== \"Php\") {\n        return (\n          <div key={obj.listkey}>\n            <label\n              className=\"text-gray-700 dark:text-gray-200\"\n              htmlFor={obj.listkey}\n            >\n              <span>\n                {obj.label}{\" \"}\n                <p className=\"inline-block text-red-700 text-sm font-bold\">\n                  {obj.validator && \" *\"}\n                </p>\n              </span>\n            </label>\n            <div className=\"grid grid-cols-2 gap-2 justify-items-start place-items-center\">\n              <input\n                id={obj.listkey}\n                type={obj.type}\n                onChange={(e) =>\n                  handleInputChange(\n                    e.target.value,\n                    obj.listkey,\n                    dataState,\n                    obj.validator,\n                    obj.label\n                  )\n                }\n                className={`block w-full px-4 py-2 mt-2  border rounded-md focus:ring-opacity-40 focus:outline-none focus:ring ${\n                  validState.hasOwnProperty(obj.listkey)\n                    ? validState[obj.listkey]\n                      ? \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                      : \"text-red-700 bg-red-50 dark:bg-red-800 border-red-200 dark:text-red-300 dark:border-red-600 focus:border-red-400 dark:focus:border-red-300 focus:ring-red-300\"\n                    : \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                }`}\n              />{\" \"}\n              {obj.unit}\n            </div>\n            <p className=\"text-red-700 text-xs\">\n              {errorMsg.hasOwnProperty(obj.listkey) &&\n                errorMsg[obj.listkey].message}\n            </p>\n          </div>\n        );\n      } else {\n        return (\n          <div key={obj.listkey}>\n            <label\n              className=\"text-gray-700 dark:text-gray-200\"\n              htmlFor={obj.listkey}\n            >\n              <span>\n                {obj.label}{\" \"}\n                <p className=\"inline-block text-red-700 text-sm font-bold\">\n                  {obj.validator && \" *\"}\n                </p>\n              </span>\n            </label>\n            <div className=\"justify-items-start place-items-center\">\n              <span>\n                {\" \"}\n                {obj.unit}\n                <input\n                  id={obj.listkey}\n                  type={obj.type}\n                  onChange={(e) =>\n                    handleInputChange(\n                      e.target.value,\n                      obj.listkey,\n                      dataState,\n                      obj.validator,\n                      obj.label\n                    )\n                  }\n                  className={`inline-block w-3/5 mx-2 px-4 py-2 mt-2 border rounded-md focus:ring-opacity-40 focus:outline-none focus:ring ${\n                    validState.hasOwnProperty(obj.listkey)\n                      ? validState[obj.listkey]\n                        ? \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                        : \"text-red-700 bg-red-50 dark:bg-red-800 border-red-200 dark:text-red-300 dark:border-red-600 focus:border-red-400 dark:focus:border-red-300 focus:ring-red-300\"\n                      : \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                  }`}\n                />\n              </span>\n              <p className=\"text-red-700 text-xs\">\n                {errorMsg.hasOwnProperty(obj.listkey) &&\n                  errorMsg[obj.listkey].message}\n              </p>\n            </div>\n          </div>\n        );\n      }\n    }\n    if (obj.listkey === \"id\") {\n      return <></>;\n    }\n    return (\n      <div key={obj.listkey}>\n        <label\n          className=\"text-gray-700 dark:text-gray-200\"\n          htmlFor={obj.listkey}\n        >\n          <span>\n            {obj.label}{\" \"}\n            <p className=\"inline-block text-red-700 text-sm font-bold\">\n              {obj.validator && \" *\"}\n            </p>\n          </span>\n        </label>\n        <input\n          id={obj.listkey}\n          onChange={(e) =>\n            handleInputChange(\n              e.target.value,\n              obj.listkey,\n              dataState,\n              obj.validator,\n              obj.label\n            )\n          }\n          type=\"text\"\n          className={`block w-full px-4 py-2 mt-2  border rounded-md focus:ring-opacity-40 focus:outline-none focus:ring ${\n            validState.hasOwnProperty(obj.listkey)\n              ? validState[obj.listkey]\n                ? \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                : \"text-red-700 bg-red-50 dark:bg-red-800 border-red-200 dark:text-red-300 dark:border-red-600 focus:border-red-400 dark:focus:border-red-300 focus:ring-red-300\"\n              : \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n          }`}\n        />\n        <p className=\"text-red-700 text-xs\">\n          {errorMsg.hasOwnProperty(obj.listkey) &&\n            errorMsg[obj.listkey].message}\n        </p>\n      </div>\n    );\n  };\n  const renderContent = () => {\n    return (\n      <div\n        id=\"childcontent\"\n        className=\"fixed right-0 left-0 top-4 bottom-4 z-50 justify-center items-center h-modal md:h-full md:inset-0 flex\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n      >\n        <div className=\"relative px-4 w-full max-w-4xl h-full md:h-auto overflow-y-auto max-h-screen\">\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n            <div className=\"flex justify-end p-2\">\n              <button\n                type=\"button\"\n                className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white\"\n                onClick={onCancel}\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                    clipRule=\"evenodd\"\n                  ></path>\n                </svg>\n              </button>\n            </div>\n            <section className=\"max-w-4xl p-6 mx-auto bg-white rounded-md shadow-md dark:bg-gray-800\">\n              <h2 className=\"text-lg font-semibold text-gray-700 capitalize dark:text-white\">\n                Add New {title}\n              </h2>\n\n              <form onSubmit={(e) => handleSave(e, dataState, title)}>\n                <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n                  {formInputs.map((obj) => renderInputs(obj))}\n                </div>\n                <div className=\"flex justify-end mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"block px-5 py-2 mt-5 font-medium leading-5 text-center text-white capitalize bg-blue-600 rounded-lg lg:mt-0 hover:bg-blue-500 lg:w-auto\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </form>\n            </section>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst AddItem = (props) => {\n  let state = {};\n  props.formInputs.forEach((item) => {\n    if (item.hasOwnProperty(\"validator\")) {\n      state[item.listkey] = true;\n    }\n  });\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <AddItemOverlay {...props} state={state} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default AddItem;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Backdrop from \"../../shared/components/UIElements/Backdrop\";\n// import { LOVContext } from \"../../homepage/context/lov-context\";\nimport { useHttpClient } from \"../../shared/components/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst DeleteItemOverlay = ({ onCancel, idToDelete, title, onUpdate }) => {\n  const [content, setContent] = useState(<></>);\n  // const {\n  //   inverters,\n  //   batterylist,\n  //   pvlist,\n  //   scclist,\n  //   setInvLOV,\n  //   setBatteryLOV,\n  //   setPVLOV,\n  //   setSCCLOV,\n  // } = useContext(LOVContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n\n  useEffect(() => {\n    setContent(renderContent());\n    // eslint-disable-next-line\n  }, [setContent]);\n\n  const deleteToBackend = async (idToDel, title) => {\n    let api_suffix;\n    title === \"Solar Panel\"\n      ? (api_suffix = \"pv\")\n      : (api_suffix = title.toLowerCase());\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/\" + api_suffix + \"/\" + idToDel,\n        \"DELETE\",\n        null,\n        {\n          Authorization: \"Bearer \" + auth.token,\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      onCancel();\n      onUpdate();\n      // history.push('/');\n    } catch (err) {}\n  };\n\n  const handleDelete = (event, data, title) => {\n    event.preventDefault();\n    switch (title) {\n      case \"Battery\": {\n        deleteToBackend(idToDelete, title);\n        break;\n      }\n      case \"Inverter\": {\n        deleteToBackend(idToDelete, title);\n\n        break;\n      }\n      case \"Solar Panel\": {\n        deleteToBackend(idToDelete, title);\n\n        break;\n      }\n      case \"SCC\": {\n        deleteToBackend(idToDelete, title);\n        break;\n      }\n    }\n    setContent(renderContent());\n  };\n\n  const renderContent = () => {\n    return (\n      <div\n        id=\"authentication-modal\"\n        className=\"fixed right-0 left-0 top-4 bottom-4 z-50 justify-center items-center h-modal md:h-full md:inset-0 flex\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n      >\n        <div className=\"relative px-4 w-full max-w-lg h-full md:h-auto overflow-y-auto max-h-screen\">\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n            <div className=\"flex justify-end p-2\">\n              <button\n                type=\"button\"\n                className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white\"\n                onClick={onCancel}\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                    clipRule=\"evenodd\"\n                  ></path>\n                </svg>\n              </button>\n            </div>\n            <section className=\"max-w-xl p-6 mx-auto bg-white rounded-md shadow-md dark:bg-gray-800\">\n              <div className=\"text-center p-5 flex-auto justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"w-16 h-16 flex items-center text-red-500 mx-auto\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"blue-50\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                    clipRule=\"evenodd\"\n                  ></path>\n                </svg>\n                <h2 className=\"text-xl font-bold py-4 \">Are you sure?</h2>\n                <p className=\"text-sm text-gray-500 px-8\">\n                  Do you really want to delete your this row?\n                </p>\n              </div>\n              <div className=\"p-3 grid gap-4 mt-2 grid-cols-2 sm:grid-row\">\n                <button\n                  className=\"px-5 py-2 font-medium text-center text-gray-600 capitalize bg-white rounded-lg lg:mt-0 hover:bg-blue-500 hover:text-white lg:w-auto tracking-wider border \"\n                  onClick={onCancel}\n                >\n                  {\" \"}\n                  Cancel\n                </button>\n                <button\n                  className=\"px-5 py-2 font-medium text-center text-white capitalize bg-blue-600 rounded-lg lg:mt-0 hover:bg-blue-500 lg:w-auto tracking-wider\"\n                  onClick={(e) => handleDelete(e, idToDelete, title)}\n                >\n                  {\" \"}\n                  Delete\n                </button>\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst DeleteItem = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <DeleteItemOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default DeleteItem;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Backdrop from \"../../shared/components/UIElements/Backdrop\";\nimport Select from \"react-select\";\n// import { LOVContext } from \"../../homepage/context/lov-context\";\nimport { validate } from \"../../shared/util/validators\";\nimport { getErrorMessage } from \"../../shared/util/errorMessages\";\nimport { useHttpClient } from \"../../shared/components/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst EditItemOverlay = ({\n  onCancel,\n  formInputs,\n  title,\n  state,\n  defaultData,\n  onUpdate,\n}) => {\n  const [content, setContent] = useState(<></>);\n  // const {\n  //   inverters,\n  //   batterylist,\n  //   pvlist,\n  //   scclist,\n  //   setInvLOV,\n  //   setBatteryLOV,\n  //   setPVLOV,\n  //   setSCCLOV,\n  // } = useContext(LOVContext);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n\n  const [dataState, setDataState] = useState(defaultData);\n  const [validState, setValidState] = useState(state);\n  const [errorMsg, setErrorMsg] = useState({});\n  const [validatorState, setValidator] = useState({});\n  const [selectedState, setSelectedState] = useState({\n    value: \"\",\n    label: \"\",\n  });\n\n  useEffect(() => {\n    setContent(renderContent());\n    // eslint-disable-next-line\n  }, [validState, dataState, selectedState]);\n\n  useEffect(() => {\n    const setValid = validatorState;\n    formInputs.forEach((i) => {\n      if (i.hasOwnProperty(\"validator\")) {\n        setValid[i.listkey] = {\n          validator: i.validator,\n          label: i.label,\n        };\n      }\n    });\n    setValidator(setValid);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    setDataState(dataState);\n    // eslint-disable-next-line\n  }, []);\n  const validateGeneral = (validator, label, value, objkey) => {\n    let returnObj = {};\n    const errorObj = errorMsg;\n    const stateSet = validState;\n    if (validator) {\n      let val = value.toString();\n      if (val === \"0\") val = \"\";\n      const valid = validate(val, validator);\n      stateSet[objkey] = valid;\n      validator.forEach((i) => {\n        errorObj[objkey] = {\n          type: i.type,\n          message: valid ? \"\" : getErrorMessage(i.type, label),\n        };\n      });\n    }\n    returnObj = { stateSet: stateSet, errorObj: errorObj };\n    return returnObj;\n  };\n\n  const saveValidation = (list, data) => {\n    let validatingFields = {};\n    list.forEach((i) => {\n      const key = i.listkey;\n      if (validatorState.hasOwnProperty(key)) {\n        if (!(Object.keys(data).length === 0)) {\n          // console.log(data);\n          if (data.hasOwnProperty(key)) {\n            validatingFields[key] = validateGeneral(\n              validatorState[key].validator,\n              data[key].label,\n              data[key].dataval,\n              key\n            );\n          } else {\n            validatingFields[key] = validateGeneral(\n              validatorState[key].validator,\n              validatorState[key].label,\n              \"\",\n              key\n            );\n          }\n        } else {\n          validatingFields[key] = validateGeneral(\n            validatorState[key].validator,\n            validatorState[key].label,\n            \"\",\n            key\n          );\n        }\n      }\n    });\n    return validatingFields;\n  };\n\n  const handleItemChanged = (event, objkey, data, validator, label) => {\n    data[objkey] = {\n      dataval: event.value,\n      label: label,\n    };\n    if (validator) {\n      const valid = validateGeneral(validator, label, event, objkey);\n      setErrorMsg(valid.errorObj);\n      setValidState(valid.stateSet);\n      setSelectedState(event);\n      setDataState(data);\n      setContent(renderContent());\n    } else {\n      setSelectedState(event);\n      setDataState(data);\n    }\n  };\n\n  const handleInputChange = (event, objkey, data, validator, label) => {\n    data[objkey] = { dataval: event, label: label };\n    const valid = validateGeneral(validator, label, event, objkey);\n    data[objkey].dataval = parseFloat(data[objkey].dataval);\n    if (validator) {\n      setErrorMsg(valid.errorObj);\n      setValidState(valid.stateSet);\n      setDataState(data);\n      setContent(renderContent());\n      // console.log(dataState);\n    } else {\n      setDataState(data);\n      setContent(renderContent());\n    }\n    // console.log(dataState);\n  };\n\n  const patchToBackend = async (data, title) => {\n    let datatoPush = {};\n    let api_suffix;\n    for (const key in data) {\n      datatoPush[key] = data[key].dataval;\n    }\n    title === \"Solar Panel\"\n      ? (api_suffix = \"pv\")\n      : (api_suffix = title.toLowerCase());\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL +\n          \"/\" +\n          api_suffix +\n          \"/\" +\n          datatoPush.id,\n        \"PATCH\",\n        JSON.stringify(datatoPush),\n        {\n          Authorization: \"Bearer \" + auth.token,\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      onCancel();\n      onUpdate();\n      // history.push('/');\n    } catch (err) {}\n  };\n\n  const handleSave = (event, data, title) => {\n    event.preventDefault();\n    switch (title) {\n      case \"Battery\": {\n        let validatingFields = saveValidation(formInputs, data);\n        let saveValid = true;\n        for (const key in validatingFields) {\n          saveValid = saveValid && validatingFields[key].stateSet[key];\n        }\n        if (saveValid) {\n          patchToBackend(data, title);\n        }\n        break;\n      }\n      case \"Inverter\": {\n        let validatingFields = saveValidation(formInputs, data);\n        let saveValid = true;\n        for (const key in validatingFields) {\n          saveValid = saveValid && validatingFields[key].stateSet[key];\n        }\n        if (saveValid) {\n          patchToBackend(data, title);\n        }\n        break;\n      }\n      case \"Solar Panel\": {\n        let validatingFields = saveValidation(formInputs, data);\n        let saveValid = true;\n        for (const key in validatingFields) {\n          saveValid = saveValid && validatingFields[key].stateSet[key];\n        }\n        if (saveValid) {\n          patchToBackend(data, title);\n        }\n        break;\n      }\n      case \"SCC\": {\n        let validatingFields = saveValidation(formInputs, data);\n        let saveValid = true;\n        for (const key in validatingFields) {\n          saveValid = saveValid && validatingFields[key].stateSet[key];\n        }\n        if (saveValid) {\n          patchToBackend(data, title);\n        }\n        break;\n      }\n      default:\n        return null;\n    }\n    setContent(renderContent());\n  };\n\n  const renderInputs = (obj, data) => {\n    // console.log(obj);\n    // console.log(data);\n    if (obj.type === \"select\") {\n      const index = obj.options.findIndex(\n        (x) => x.value === data[obj.listkey].dataval\n      );\n      // console.log(obj.options[index]);\n      return (\n        <div key={obj.listkey}>\n          <label\n            className=\"text-gray-700 dark:text-gray-200\"\n            htmlFor={obj.listkey}\n          >\n            {obj.label}\n            {obj.validator && \"*\"}\n          </label>\n          <Select\n            className={`block w-full px-4 py-2 mt-2 ${\n              validState.hasOwnProperty(obj.listkey)\n                ? validState[obj.listkey]\n                  ? \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                  : \"text-red-700 bg-red-50 dark:bg-red-800 border-red-200 dark:text-red-300 dark:border-red-600 focus:border-red-400 dark:focus:border-red-300 focus:ring-red-300\"\n                : \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n            }`}\n            value={\n              selectedState.value === \"\" ? obj.options[index] : selectedState\n            }\n            onChange={(e) =>\n              handleItemChanged(\n                e,\n                obj.listkey,\n                dataState,\n                obj.validator,\n                obj.label\n              )\n            }\n            options={obj.options}\n          />\n          <p className=\"text-red-700 text-xs\">\n            {errorMsg.hasOwnProperty(obj.listkey) &&\n              errorMsg[obj.listkey].message}\n          </p>\n        </div>\n      );\n    }\n    if (obj.hasOwnProperty(\"unit\")) {\n      if (obj.unit !== \"Php\") {\n        return (\n          <div key={obj.listkey}>\n            <label\n              className=\"text-gray-700 dark:text-gray-200\"\n              htmlFor={obj.listkey}\n            >\n              <span>\n                {obj.label}{\" \"}\n                <p className=\"inline-block text-red-700 text-sm font-bold\">\n                  {obj.validator && \" *\"}\n                </p>\n              </span>\n            </label>\n            <div className=\"grid grid-cols-2 gap-2 justify-items-start place-items-center\">\n              <input\n                id={obj.listkey}\n                value={data[obj.listkey].dataval}\n                type={obj.type}\n                onChange={(e) =>\n                  handleInputChange(\n                    e.target.value,\n                    obj.listkey,\n                    dataState,\n                    obj.validator,\n                    obj.label\n                  )\n                }\n                className={`block w-full px-4 py-2 mt-2  border rounded-md focus:ring-opacity-40 focus:outline-none focus:ring ${\n                  validState.hasOwnProperty(obj.listkey)\n                    ? validState[obj.listkey]\n                      ? \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                      : \"text-red-700 bg-red-50 dark:bg-red-800 border-red-200 dark:text-red-300 dark:border-red-600 focus:border-red-400 dark:focus:border-red-300 focus:ring-red-300\"\n                    : \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                }`}\n              />{\" \"}\n              {obj.unit}\n            </div>\n            <p className=\"text-red-700 text-xs\">\n              {errorMsg.hasOwnProperty(obj.listkey) &&\n                errorMsg[obj.listkey].message}\n            </p>\n          </div>\n        );\n      } else {\n        return (\n          <div key={obj.listkey}>\n            <label\n              className=\"text-gray-700 dark:text-gray-200\"\n              htmlFor={obj.listkey}\n            >\n              <span>\n                {obj.label}{\" \"}\n                <p className=\"inline-block text-red-700 text-sm font-bold\">\n                  {obj.validator && \" *\"}\n                </p>\n              </span>\n            </label>\n            <div className=\"justify-items-start place-items-center\">\n              <span>\n                {\" \"}\n                {obj.unit}\n                <input\n                  id={obj.listkey}\n                  type={obj.type}\n                  value={data[obj.listkey].dataval}\n                  onChange={(e) =>\n                    handleInputChange(\n                      e.target.value,\n                      obj.listkey,\n                      dataState,\n                      obj.validator,\n                      obj.label\n                    )\n                  }\n                  className={`inline-block w-3/5 mx-2 px-4 py-2 mt-2 border rounded-md focus:ring-opacity-40 focus:outline-none focus:ring ${\n                    validState.hasOwnProperty(obj.listkey)\n                      ? validState[obj.listkey]\n                        ? \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                        : \"text-red-700 bg-red-50 dark:bg-red-800 border-red-200 dark:text-red-300 dark:border-red-600 focus:border-red-400 dark:focus:border-red-300 focus:ring-red-300\"\n                      : \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                  }`}\n                />\n              </span>\n              <p className=\"text-red-700 text-xs\">\n                {errorMsg.hasOwnProperty(obj.listkey) &&\n                  errorMsg[obj.listkey].message}\n              </p>\n            </div>\n          </div>\n        );\n      }\n    }\n    if (obj.listkey === \"id\") {\n      return <></>;\n    }\n    return (\n      <div key={obj.listkey}>\n        <label\n          className=\"text-gray-700 dark:text-gray-200\"\n          htmlFor={obj.listkey}\n        >\n          <span>\n            {obj.label}{\" \"}\n            <p className=\"inline-block text-red-700 text-sm font-bold\">\n              {obj.validator && \" *\"}\n            </p>\n          </span>\n        </label>\n        <input\n          id={obj.listkey}\n          value={data[obj.listkey].dataval}\n          onChange={(e) =>\n            handleInputChange(\n              e.target.value,\n              obj.listkey,\n              dataState,\n              obj.validator,\n              obj.label\n            )\n          }\n          type=\"text\"\n          className={`block w-full px-4 py-2 mt-2  border rounded-md focus:ring-opacity-40 focus:outline-none focus:ring ${\n            validState.hasOwnProperty(obj.listkey)\n              ? validState[obj.listkey]\n                ? \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n                : \"text-red-700 bg-red-50 dark:bg-red-800 border-red-200 dark:text-red-300 dark:border-red-600 focus:border-red-400 dark:focus:border-red-300 focus:ring-red-300\"\n              : \"text-gray-700 bg-white dark:bg-gray-800 border-gray-200 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:ring-blue-300\"\n          }`}\n        />\n        <p className=\"text-red-700 text-xs\">\n          {errorMsg.hasOwnProperty(obj.listkey) &&\n            errorMsg[obj.listkey].message}\n        </p>\n      </div>\n    );\n  };\n  const renderContent = () => {\n    return (\n      <div\n        id=\"authentication-modal\"\n        className=\"fixed right-0 left-0 top-4 bottom-4 z-50 justify-center items-center h-modal md:h-full md:inset-0 flex\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n      >\n        <div className=\"relative px-4 w-full max-w-4xl h-full md:h-auto overflow-y-auto max-h-screen\">\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n            <div className=\"flex justify-end p-2\">\n              <button\n                type=\"button\"\n                className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white\"\n                onClick={onCancel}\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                    clipRule=\"evenodd\"\n                  ></path>\n                </svg>\n              </button>\n            </div>\n            <section className=\"max-w-4xl p-6 mx-auto bg-white rounded-md shadow-md dark:bg-gray-800\">\n              <h2 className=\"text-lg font-semibold text-gray-700 capitalize dark:text-white\">\n                Edit {title} Data ({dataState.id.dataval})\n              </h2>\n\n              <form onSubmit={(e) => handleSave(e, dataState, title)}>\n                <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n                  {formInputs.map((obj) => renderInputs(obj, dataState))}\n                </div>\n                <div className=\"flex justify-end mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"block px-5 py-2 mt-5 font-medium leading-5 text-center text-white capitalize bg-blue-600 rounded-lg lg:mt-0 hover:bg-blue-500 lg:w-auto\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </form>\n            </section>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  // console.log(dataState);\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst EditItem = (props) => {\n  let state = {};\n\n  let datatoSet = {};\n  for (const key in props.initialValue) {\n    let labelset = \"\";\n    props.formInputs.forEach((i) => {\n      if (i.listkey === key) labelset = i.label;\n    });\n    datatoSet[key] = {\n      dataval: props.initialValue[key],\n      label: labelset,\n    };\n  }\n  props.formInputs.forEach((item) => {\n    if (item.hasOwnProperty(\"validator\")) {\n      state[item.listkey] = true;\n    }\n  });\n  delete datatoSet.creator;\n  delete datatoSet.__v;\n  delete datatoSet._id;\n  // console.log(datatoSet);\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <EditItemOverlay {...props} state={state} defaultData={datatoSet} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default EditItem;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","export const getErrorMessage = (errorType, label) => {\n  switch (errorType) {\n    case \"REQUIRE\": {\n      return label + \" is a required field\";\n    }\n    case \"NUMBER\": {\n      return \"Enter a valid number for \" + label;\n    }\n    default:\n      return \"\";\n  }\n};\n"],"sourceRoot":""}