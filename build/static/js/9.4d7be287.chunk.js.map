{"version":3,"sources":["shared/components/hooks/form-hook.js","shared/components/FormElement/Input.js","users/pages/Auth.js","shared/components/hooks/http-hook.js","shared/util/validators.js","shared/components/UIElements/AlertModal.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["formReducer","state","action","type","formisValid","inputId","inputs","isValid","value","inputReducer","val","validate","validators","isTouched","Input","props","useReducer","initialValue","initialisValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","row","className","htmlFor","label","errorText","Auth","login","useContext","AuthContext","useState","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","initialInputs","initialFormValidity","formstate","useCallback","inputData","formVaildity","useForm","email","password","inputHandler","registerHandler","prevMode","authSubmitHandler","a","preventDefault","process","JSON","stringify","responseData","userId","token","name","role","LoadingSpinner","onSubmit","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","onClick","AlertModal","setIsLoading","setError","activeHttpRequests","useRef","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_NUMBER","validator","trim","length","test","console","log","msg","notify","toast","custom","t","visible","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","remove","x1","y1","x2","y2","duration","cx","cy","r","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","i","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/9.4d7be287.chunk.js","sourcesContent":["import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\": {\n      let formisValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formisValid = formisValid && action.isValid;\n        } else {\n          formisValid = formisValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formisValid,\n      };\n    }\n    case \"SET\": {\n      return {\n        inputs: action.inputs,\n        isValid: action.formisValid,\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formstate, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const setFormData = useCallback((inputData, formVaildity) => {\n    dispatch({\n      type: \"SET\",\n      inputs: inputData,\n      formisValid: formVaildity,\n    });\n    // eslint-disable-next-line\n  }, []);\n  return [formstate, inputHandler, setFormData];\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialisValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n    // eslint-disable-next-line\n  }, [id, isValid, value, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.row || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}> {props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState, useContext } from \"react\";\nimport { useForm } from \"../../shared/components/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport Input from \"../../shared/components/FormElement/Input\";\nimport { useHttpClient } from \"../../shared/components/hooks/http-hook\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport AlertModal from \"../../shared/components/UIElements/AlertModal\";\n\nconst Auth = () => {\n  const { login } = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formstate, inputHandler] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const registerHandler = () => {\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n          \"POST\",\n          JSON.stringify({\n            email: formstate.inputs.email.value,\n            password: formstate.inputs.password.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n        return login(\n          responseData.userId,\n          responseData.token,\n          responseData.email,\n          responseData.name,\n          responseData.role\n        );\n      } catch (err) {}\n    } else {\n      try {\n        // const formData = new FormData();\n        // formData.append(\"email\", formstate.inputs.email.value);\n        // formData.append(\"name\", formstate.inputs.name.value);\n        // formData.append(\"password\", formstate.inputs.password.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\n          \"POST\",\n          JSON.stringify({\n            email: formstate.inputs.email.value,\n            password: formstate.inputs.password.value,\n            name: formstate.inputs.name.value,\n            role: \"User\",\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n\n        return login(\n          responseData.userId,\n          responseData.token,\n          responseData.email,\n          responseData.name,\n          responseData.role\n        );\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <>\n      {isLoading && <LoadingSpinner />}\n      <div className=\"w-full max-w-sm mx-auto overflow-hidden mt-4 bg-white rounded-lg shadow-md border-2 border-blue-400 dark:border-blue-300 dark:bg-gray-800\">\n        <div className=\"px-6 py-4\">\n          <h2 className=\"text-3xl font-bold text-center text-gray-700 dark:text-white\">\n            LOGIN HERE\n          </h2>\n\n          <p className=\"mt-1 text-center text-gray-500 dark:text-gray-400\">\n            Login or create account\n          </p>\n          <form onSubmit={authSubmitHandler}>\n            {!isLoginMode && (\n              <Input\n                element=\"input\"\n                id=\"name\"\n                type=\"text\"\n                label=\"Name\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a name.\"\n                onInput={inputHandler}\n              />\n            )}\n            <Input\n              id=\"email\"\n              element=\"input\"\n              type=\"email\"\n              label=\"Email\"\n              validators={[VALIDATOR_EMAIL()]}\n              errorText=\"Please enter a valid email.\"\n              onInput={inputHandler}\n            />\n            <Input\n              id=\"password\"\n              element=\"input\"\n              type=\"password\"\n              label=\"Password\"\n              validators={[VALIDATOR_MINLENGTH(6)]}\n              errorText=\"Please enter a valid password (At least 8 characters).\"\n              onInput={inputHandler}\n            />\n            {isLoginMode ? (\n              <button\n                type=\"submit\"\n                className={\n                  !formstate.isValid\n                    ? \"w-full lg:w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform text-white capitalize rounded-lg bg-gray-200 lg:mt-0 lg:w-auto cursor-not-allowed\"\n                    : \"w-full lg:w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-600 hover:bg-blue-500 rounded-md focus:outline-none\"\n                }\n                disabled={!formstate.isValid}\n                // onClick={buttonHandler}\n              >\n                LOGIN\n              </button>\n            ) : (\n              <button\n                type=\"submit\"\n                className={\n                  !formstate.isValid\n                    ? \"w-full lg:w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform text-white capitalize rounded-lg bg-gray-200 lg:mt-0 lg:w-auto cursor-not-allowed\"\n                    : \"w-full lg:w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-600 hover:bg-blue-500 rounded-md focus:outline-none\"\n                }\n                disabled={!formstate.isValid}\n                // onClick={buttonHandler}\n              >\n                SIGNUP\n              </button>\n            )}\n          </form>\n        </div>\n\n        <div className=\"flex items-center justify-center py-4 text-center bg-gray-50 dark:bg-gray-700\">\n          {isLoginMode ? (\n            <span className=\"text-sm text-gray-600 dark:text-gray-200\">\n              {\" \"}\n              New here? Please{\" \"}\n              <button\n                className=\"mx-2 text-sm font-bold text-blue-500 dark:text-blue-400 hover:underline\"\n                onClick={registerHandler}\n              >\n                Register\n              </button>\n            </span>\n          ) : (\n            <span className=\"text-sm text-gray-600 dark:text-gray-200\">\n              {\" \"}\n              Already have an account? Please{\" \"}\n              <button\n                className=\"mx-2 text-sm font-bold text-blue-500 dark:text-blue-400 hover:underline\"\n                onClick={registerHandler}\n              >\n                Sign-in\n              </button>\n            </span>\n          )}\n        </div>\n      </div>\n      {error && !isLoading && (\n        <AlertModal error={error} type={\"ERROR\"} clearError={clearError} />\n      )}\n    </>\n  );\n};\n\nexport default Auth;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n    // eslint-disable-next-line\n  }, []);\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\nconst VALIDATOR_TYPE_NUMBER = \"NUMBER\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_NUMBER = () => ({ type: VALIDATOR_TYPE_NUMBER });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n    if (validator.type === VALIDATOR_TYPE_NUMBER) {\n      console.log(value);\n      if (/^[A-Za-z]+$/.test(value)) {\n        isValid = false;\n      } else {\n        isValid = isValid && /^[1-9]\\d*(\\.\\d+)?$/.test(value);\n      }\n    }\n  }\n  return isValid;\n};\n","import React, { useEffect, useState } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nconst AlertModal = ({ msg, type }) => {\n  useEffect(() => {\n    notify(type, msg);\n    // eslint-disable-next-line\n  }, [msg, type]);\n\n  const notify = (type, message) => {\n    switch (type) {\n      case \"SUCCESS\": {\n        return toast.custom(\n          (t) => (\n            <div\n              className={`${\n                t.visible ? \"animate-enter\" : \"animate-leave\"\n              } relative duration-300 space-x-2 justify-center`}\n            >\n              <div\n                className=\"flex p-4 mb-4 top-0 right-0 -mt-1 mr-2 items-center text-sm text-green-700 bg-green-100 rounded-lg dark:bg-green-200 dark:text-green-800\"\n                role=\"alert\"\n              >\n                <svg\n                  className=\"h-8 w-8 text-green-500\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  {\" \"}\n                  <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" />{\" \"}\n                  <polyline points=\"22 4 12 14.01 9 11.01\" />\n                </svg>\n                <div className=\"ml-2 inline-block\">\n                  <span className=\"font-medium\">Success alert!</span> Change a\n                  few things up and try submitting again.\n                </div>\n                <button\n                  onClick={() => toast.remove(t.id)}\n                  className=\"border border-transparent p-2 items-center justify-center text-sm font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                >\n                  <svg\n                    className=\"h-6 w-6 text-green-500\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    {\" \"}\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />{\" \"}\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          ),\n          { duration: 2000 }\n        );\n      }\n      case \"ERROR\":\n        return toast.custom(\n          (t) => (\n            <div\n              className={`${\n                t.visible ? \"animate-enter\" : \"animate-leave\"\n              } relative duration-300 space-x-2 justify-center`}\n            >\n              <div\n                className=\"flex p-4 mb-4 top-0 right-0 -mt-1 mr-2 items-center text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\"\n                role=\"alert\"\n              >\n                <svg\n                  className=\"h-8 w-8 text-red-500\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  {\" \"}\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" />{\" \"}\n                  <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />{\" \"}\n                  <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\" />\n                </svg>\n                <div className=\"ml-2 inline-block\">\n                  <span className=\"font-medium\">ERROR!</span> {message}\n                </div>\n                <button\n                  onClick={() => toast.remove(t.id)}\n                  className=\"border border-transparent p-2 items-center justify-center text-sm font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                >\n                  <svg\n                    className=\"h-6 w-6 text-red-500\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    {\" \"}\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />{\" \"}\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          ),\n          { duration: 2000 }\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return <>{msg && <Toaster />}</>;\n};\n\nexport default AlertModal;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}