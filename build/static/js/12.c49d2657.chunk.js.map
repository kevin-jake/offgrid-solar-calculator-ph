{"version":3,"sources":["crudpages/SCCItems.js","crudpages/SCCList.js"],"names":["SCCItems","scclist","formInputs","onUpdate","useState","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","role","useContext","AuthContext","update","className","sccname","type","brand","amprating","supplier","numberWithCommas","price","toFixed","target","rel","href","link","onClick","EditItem","show","onCancel","initialValue","title","DeleteItem","idToDelete","id","SCCList","setSCCList","useHttpClient","isLoading","sendRequest","error","clearError","showModal","setShowModal","refresh","setRefresh","useEffect","a","process","responseData","sccs","fetchSCC","listkey","label","validator","VALIDATOR_REQUIRE","unit","setModal","cancelModal","LoadingSpinner","length","AddItem","map","obj","key"],"mappings":"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","file":"static/js/12.c49d2657.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { numberWithCommas } from \"../shared/util/format\";\nimport DeleteItem from \"./form/DeleteItem\";\nimport EditItem from \"./form/EditItem\";\n\nconst SCCItems = ({ scclist, formInputs, onUpdate }) => {\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const { role } = useContext(AuthContext);\n  const openEdit = () => {\n    setShowEditModal(true);\n  };\n\n  const closeEdit = () => {\n    setShowEditModal(false);\n  };\n\n  const openDelete = () => {\n    setShowDeleteModal(true);\n  };\n\n  const closeDelete = () => {\n    setShowDeleteModal(false);\n  };\n\n  const update = () => {\n    onUpdate();\n  };\n\n  return (\n    <>\n      <tr>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500\">\n          <div className=\"text-sm leading-5 text-blue-900\">\n            {scclist.sccname}\n          </div>\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">\n          {scclist.type}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">\n          {scclist.brand}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">\n          {scclist.amprating + \" A\"}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500 text-blue-900 text-sm leading-5\">\n          {scclist.supplier}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500 text-blue-900 text-sm leading-5\">\n          {\"Php \" + numberWithCommas(scclist.price.toFixed(2))}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500 text-blue-900 text-sm leading-5\">\n          <a\n            className=\" px-4 py-2 mt-2 text-blue-600 visited:text-purple-600\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={scclist.link}\n          >\n            {scclist.link ? \"Link\" : \"\"}\n          </a>\n        </td>\n        {role === \"Admin\" && (\n          <td className=\"px-6 py-4 whitespace-no-wrap text-right border-b border-gray-500 text-sm leading-5\">\n            <div className=\"grid lg:grid-row xl:grid-cols-2 gap-4 sm:grid-row md:grid-row\">\n              <button\n                className=\"px-5 py-2 border-blue-500 border text-blue-500 rounded transition duration-300 hover:bg-blue-700 hover:text-white focus:outline-none md:row-span-auto\"\n                onClick={openEdit}\n              >\n                Edit\n              </button>\n              <button\n                className=\"px-5 py-2 border-blue-500 border text-blue-500 rounded transition duration-300 hover:bg-blue-700 hover:text-white focus:outline-none md:row-span-auto\"\n                onClick={openDelete}\n              >\n                Delete\n              </button>\n            </div>\n          </td>\n        )}\n      </tr>\n      {role === \"Admin\" && (\n        <>\n          <EditItem\n            show={showEditModal}\n            onCancel={closeEdit}\n            formInputs={formInputs}\n            initialValue={scclist}\n            onUpdate={update}\n            title=\"SCC\"\n          />\n          <DeleteItem\n            show={showDeleteModal}\n            onCancel={closeDelete}\n            idToDelete={scclist.id}\n            onUpdate={update}\n            title=\"SCC\"\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SCCItems;\n","import React, { useContext, useEffect, useState } from \"react\";\n// import { LOVContext } from \"../homepage/context/lov-context\";\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { VALIDATOR_REQUIRE } from \"../shared/util/validators\";\nimport AddItem from \"./form/AddItem\";\nimport SCCItems from \"./SCCItems\";\n\nconst SCCList = () => {\n  // const { scclist } = useContext(LOVContext);\n  const [scclist, setSCCList] = useState([]);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [showModal, setShowModal] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const { role } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchSCC = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/scc\"\n        );\n\n        setSCCList(responseData.sccs);\n      } catch (err) {}\n    };\n    fetchSCC();\n  }, [sendRequest, refresh]);\n\n  const formInputs = [\n    {\n      listkey: \"id\",\n      type: \"text\",\n      label: \"ID\",\n    },\n    {\n      listkey: \"sccname\",\n      type: \"text\",\n      label: \"Name\",\n      validator: [VALIDATOR_REQUIRE()],\n    },\n    {\n      listkey: \"type\",\n      type: \"text\",\n      label: \"Type\",\n      validator: [VALIDATOR_REQUIRE()],\n    },\n    { listkey: \"brand\", type: \"text\", label: \"Brand\" },\n    { listkey: \"supplier\", type: \"text\", label: \"Supplier\" },\n    {\n      listkey: \"amprating\",\n      type: \"number\",\n      label: \"Ampere Rating\",\n      unit: \"A\",\n      validator: [VALIDATOR_REQUIRE()],\n    },\n    {\n      listkey: \"price\",\n      type: \"number\",\n      label: \"Price\",\n      unit: \"Php\",\n      validator: [VALIDATOR_REQUIRE()],\n    },\n    // { listkey: \"img\", type: \"text\", label: \"Image\" },\n    { listkey: \"link\", type: \"text\", label: \"Link\" },\n  ];\n\n  const setModal = () => {\n    setShowModal(true);\n  };\n\n  const cancelModal = () => {\n    setShowModal(false);\n  };\n\n  const onUpdate = () => {\n    setRefresh(!refresh);\n  };\n\n  const toRender = (list) => {\n    if (list.length === 0) {\n      return (\n        <div className=\"bg-white overflow-hidden sm:rounded-lg pb-8\">\n          <div className=\"border-t border-gray-200 text-center pt-8\">\n            <h1 className=\"text-6xl font-bold text-gray-400\">Empty List</h1>\n            <h1 className=\"text-xl font-medium py-8\">No SCC found</h1>\n            {role === \"Admin\" && (\n              <>\n                <button\n                  className=\"px-5 py-2 mt-5 font-medium leading-5 text-center text-white capitalize bg-blue-600 rounded-lg lg:mt-0 hover:bg-blue-500 lg:w-auto\"\n                  onClick={setModal}\n                >\n                  Add Item\n                </button>\n                <AddItem\n                  show={showModal}\n                  onCancel={cancelModal}\n                  onUpdate={onUpdate}\n                  formInputs={formInputs}\n                  title=\"SCC\"\n                />\n              </>\n            )}\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"my-2 mx-2 py-6 pb-8 overflow-x-auto border-2 border-blue-400 dark:border-blue-300 rounded-xl relative\">\n            <div className=\"align-middle mb-5 inline-block min-w-full overflow-hidden bg-white  px-8 pt-3 rounded-bl-lg rounded-br-lg\">\n              <table className=\"min-w-full\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Name\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Type\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Brand\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Ampere Rating\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Supplier\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Price\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Link\n                    </th>\n                    {role === \"Admin\" && (\n                      <th className=\"px-6 py-3 border-b-2 border-gray-300\"></th>\n                    )}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white\">\n                  {scclist.map((obj) => (\n                    <SCCItems\n                      key={obj.id}\n                      scclist={obj}\n                      formInputs={formInputs}\n                      onUpdate={onUpdate}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            {role === \"Admin\" && (\n              <button\n                className=\"block px-5 py-2 mt-5 font-medium leading-5 text-center text-white capitalize bg-blue-600 rounded-lg lg:mt-0 hover:bg-blue-500 lg:w-auto absolute bottom-2 right-6\"\n                onClick={setModal}\n              >\n                Add Item\n              </button>\n            )}\n          </div>\n          {role === \"Admin\" && (\n            <AddItem\n              show={showModal}\n              onCancel={cancelModal}\n              onUpdate={onUpdate}\n              formInputs={formInputs}\n              title=\"SCC\"\n            />\n          )}\n        </>\n      );\n    }\n  };\n\n  return (\n    <>\n      {isLoading && <LoadingSpinner />}\n      {!isLoading && scclist && toRender(scclist)}\n    </>\n  );\n};\n\nexport default SCCList;\n"],"sourceRoot":""}