{"version":3,"sources":["crudpages/BatteryItems.js","crudpages/BatteryList.js"],"names":["BatteryItems","battlist","formInputs","onUpdate","useState","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","role","useContext","AuthContext","update","className","battname","batttype","battmodel","voltage","battcapacity","numberWithCommas","priceperpc","toFixed","target","rel","href","link","onClick","EditItem","show","onCancel","initialValue","title","DeleteItem","idToDelete","id","BatteryList","batterylist","setBatteryList","useHttpClient","isLoading","sendRequest","error","clearError","showModal","setShowModal","refresh","setRefresh","useEffect","a","process","responseData","battery","fetchBattery","listkey","type","label","validator","VALIDATOR_REQUIRE","options","value","unit","VALIDATOR_NUMBER","setModal","cancelModal","LoadingSpinner","length","AddItem","map","obj","key"],"mappings":"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","file":"static/js/10.f81fb7f7.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { numberWithCommas } from \"../shared/util/format\";\nimport DeleteItem from \"./form/DeleteItem\";\nimport EditItem from \"./form/EditItem\";\n\nconst BatteryItems = ({ battlist, formInputs, onUpdate }) => {\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const { role } = useContext(AuthContext);\n\n  const openEdit = () => {\n    setShowEditModal(true);\n  };\n\n  const closeEdit = () => {\n    setShowEditModal(false);\n  };\n\n  const openDelete = () => {\n    setShowDeleteModal(true);\n  };\n\n  const closeDelete = () => {\n    setShowDeleteModal(false);\n  };\n\n  const update = () => {\n    onUpdate();\n  };\n\n  return (\n    <>\n      <tr>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500\">\n          <div className=\"text-sm leading-5 text-blue-900\">\n            {battlist.battname}\n          </div>\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">\n          {battlist.batttype}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">\n          {battlist.battmodel}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">\n          {battlist.voltage + \" V\"}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500 text-blue-900 text-sm leading-5\">\n          {battlist.battcapacity + \" Ah\"}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500 text-blue-900 text-sm leading-5\">\n          {\"Php \" + numberWithCommas(battlist.priceperpc.toFixed(2))}\n        </td>\n        <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500 text-blue-900 text-sm leading-5\">\n          <a\n            className=\" px-4 py-2 mt-2 text-blue-600 visited:text-purple-600\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={battlist.link}\n          >\n            {battlist.link ? \"Link\" : \"\"}\n          </a>\n        </td>\n        {role === \"Admin\" && (\n          <td className=\"px-6 py-4 whitespace-no-wrap text-right border-b border-gray-500 text-sm leading-5\">\n            <div className=\"grid lg:grid-row xl:grid-cols-2 gap-4 sm:grid-row md:grid-row\">\n              <button\n                className=\"px-5 py-2 border-blue-500 border text-blue-500 rounded transition duration-300 hover:bg-blue-700 hover:text-white focus:outline-none md:row-span-auto\"\n                onClick={openEdit}\n              >\n                Edit\n              </button>\n              <button\n                className=\"px-5 py-2 border-blue-500 border text-blue-500 rounded transition duration-300 hover:bg-blue-700 hover:text-white focus:outline-none md:row-span-auto\"\n                onClick={openDelete}\n              >\n                Delete\n              </button>\n            </div>\n          </td>\n        )}\n      </tr>\n      {role === \"Admin\" && (\n        <>\n          <EditItem\n            show={showEditModal}\n            onCancel={closeEdit}\n            formInputs={formInputs}\n            initialValue={battlist}\n            onUpdate={update}\n            title=\"Battery\"\n          />\n          <DeleteItem\n            show={showDeleteModal}\n            onCancel={closeDelete}\n            idToDelete={battlist.id}\n            onUpdate={update}\n            title=\"Battery\"\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default BatteryItems;\n","import React, { useContext, useEffect, useState } from \"react\";\n// // import { LOVContext } from \"../homepage/context/lov-context\";\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_NUMBER } from \"../shared/util/validators\";\nimport BatteryItems from \"./BatteryItems\";\nimport AddItem from \"./form/AddItem\";\n\nconst BatteryList = () => {\n  // const { batterylist } = useContext(LOVContext);\n  const [batterylist, setBatteryList] = useState([]);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [showModal, setShowModal] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const { role } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchBattery = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/battery\"\n        );\n\n        setBatteryList(responseData.battery);\n      } catch (err) {}\n    };\n    fetchBattery();\n    // eslint-disable-next-line\n  }, [sendRequest, refresh]);\n\n  const formInputs = [\n    {\n      listkey: \"id\",\n      type: \"text\",\n      label: \"ID\",\n    },\n    {\n      listkey: \"battname\",\n      type: \"text\",\n      label: \"Name\",\n      validator: [VALIDATOR_REQUIRE()],\n    },\n    {\n      listkey: \"batttype\",\n      type: \"select\",\n      label: \"Battery Type\",\n      options: [\n        {\n          value: \"Lead Acid\",\n          label: \"Lead Acid\",\n        },\n        {\n          value: \"Lithium Ion\",\n          label: \"Lithium Ion\",\n        },\n        {\n          value: \"LiFePo4\",\n          label: \"LiFePo4\",\n        },\n      ],\n      validator: [VALIDATOR_REQUIRE()],\n    },\n    { listkey: \"battmodel\", type: \"text\", label: \"Model\" },\n    {\n      listkey: \"voltage\",\n      type: \"text\",\n      label: \"Voltage\",\n      unit: \"V\",\n      validator: [VALIDATOR_REQUIRE(), VALIDATOR_NUMBER()],\n    },\n    {\n      listkey: \"battcapacity\",\n      type: \"text\",\n      label: \"Capacity\",\n      unit: \"Ah\",\n      validator: [VALIDATOR_REQUIRE(), VALIDATOR_NUMBER()],\n    },\n    {\n      listkey: \"priceperpc\",\n      type: \"text\",\n      label: \"Price per pc.\",\n      unit: \"Php\",\n      validator: [VALIDATOR_REQUIRE(), VALIDATOR_NUMBER()],\n    },\n    // { listkey: \"img\", type: \"text\", label: \"Image\" },\n    { listkey: \"link\", type: \"text\", label: \"Link\" },\n  ];\n  const setModal = () => {\n    setShowModal(true);\n  };\n\n  const cancelModal = () => {\n    setShowModal(false);\n  };\n\n  const onUpdate = () => {\n    setRefresh(!refresh);\n  };\n\n  const toRender = (list) => {\n    if (list.length === 0) {\n      return (\n        <>\n          <div className=\"bg-white overflow-hidden sm:rounded-lg pb-8\">\n            <div className=\"border-t border-gray-200 text-center pt-8\">\n              <h1 className=\"text-6xl font-bold text-gray-400\">Empty List</h1>\n              <h1 className=\"text-xl font-medium py-8\">No Batteries found</h1>\n              {role === \"Admin\" && (\n                <>\n                  <button\n                    className=\"px-5 py-2 mt-5 font-medium leading-5 text-center text-white capitalize bg-blue-600 rounded-lg lg:mt-0 hover:bg-blue-500 lg:w-auto\"\n                    onClick={setModal}\n                  >\n                    Add Item\n                  </button>\n                  <AddItem\n                    show={showModal}\n                    onCancel={cancelModal}\n                    onUpdate={onUpdate}\n                    formInputs={formInputs}\n                    title=\"Battery\"\n                  />\n                </>\n              )}\n            </div>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"my-2 mx-2 py-6 pb-8 overflow-x-auto border-2 border-blue-400 dark:border-blue-300 rounded-xl relative\">\n            <div className=\"align-middle mb-5 inline-block min-w-full overflow-hidden bg-white  px-8 pt-3 rounded-bl-lg rounded-br-lg\">\n              <table className=\"min-w-full\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Name\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Type\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Model\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Voltage\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Capacity\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Price per pc.\n                    </th>\n                    <th className=\"px-6 py-3 border-b-2 border-gray-300 text-left text-sm leading-4 text-blue-500 tracking-wider\">\n                      Link\n                    </th>\n                    {role === \"Admin\" && (\n                      <th className=\"px-6 py-3 border-b-2 border-gray-300\"></th>\n                    )}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white\">\n                  {batterylist.map((obj) => (\n                    <BatteryItems\n                      key={obj.id}\n                      battlist={obj}\n                      formInputs={formInputs}\n                      onUpdate={onUpdate}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            {role === \"Admin\" && (\n              <button\n                className=\"block px-5 py-2 mt-5 font-medium leading-5 text-center text-white capitalize bg-blue-600 rounded-lg lg:mt-0 hover:bg-blue-500 lg:w-auto absolute bottom-2 right-6\"\n                onClick={setModal}\n              >\n                Add Item\n              </button>\n            )}\n          </div>\n          {role === \"Admin\" && (\n            <AddItem\n              show={showModal}\n              onCancel={cancelModal}\n              onUpdate={onUpdate}\n              formInputs={formInputs}\n              title=\"Battery\"\n            />\n          )}\n        </>\n      );\n    }\n  };\n\n  return (\n    <>\n      {isLoading && <LoadingSpinner />}\n      {!isLoading && batterylist && toRender(batterylist)}\n    </>\n  );\n};\n\nexport default BatteryList;\n"],"sourceRoot":""}